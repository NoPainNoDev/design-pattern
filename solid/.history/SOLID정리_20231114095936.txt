
1. 단일 책임 원칙 (Simple Responsibility Principle)

- 모든 클래스는 하나의 책임만 가져야 한다. 
- 클래스는 책임에 대해서 완전히 캡슐화 해야 한다.

ex) 계산기(클래스)
    사칙연산(책임)
    계산기는 사칙연산(만)을 책임진다.
    클래스를 수정하는 것은 사칙연산 책임에 대한 대응이지, 
    두가지 이상의 이유가 있으면 안된다.


2.  개방 폐쇄 원칙 (Open Closed Principle)

- 확장에는 열려있고, 수정에는 닫혀있다.
- 클래스는 기능을 추가할 수 있다. (Open) 
- 기존의 코드를 변경하지 않는다. (Close)

ex) 캐릭터(상위클래스)
    새로운 캐릭터 A(하위클래스)
    A의 움직임이 다를 경우
    캐릭터 코드를 수정할 필요 없이, (Close)
    A 캐릭터의 움직임을 재정의 한다. (Open)


3. 리스코프 치환 원칙 (Liskov Substitution Principle)

- 자식 클래스는 언제나 부모 클래스를 대체할 수 있다.
- 부모 클래스 자리에 자식 클래스가 와도 잘 작동해야 한다.